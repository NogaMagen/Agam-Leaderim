version: '3.8'

services:

  db:
    image: postgres:14-alpine
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Pass123
      POSTGRES_DB: we-share
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/populate
      - ./__init__.sql:/docker-entrypoint-initdb.d/create_tables.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s
    restart: always
    networks:
      - app_network
    deploy:
      resources:
        limits:
          memory: 500M
          cpus: "0.5"

  redis:
    image: redis:latest
    container_name: redis_container
    ports:
      - "6379:6379"
    restart: always
    networks:
      - app_network

  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: fastapi_container
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: we-share
      DB_USER: postgres
      DB_PASSWORD: Pass123
      REDIS_HOST: redis
      REDIS_PORT: 6379
      SECRET_KEY: "agam-leaderim"
      ALGORITHM: "HS256"
      ACCESS_TOKEN_EXPIRE_MINUTES: 3000
      PYTHONPATH: /src
    restart: always
    networks:
      - app_network

networks:
  app_network:

volumes:
  db:
    driver: local
